name: CI Pipeline

on:
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Python service
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install Python dependencies
        run: |
          cd python-service
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Lint Python code
        run: |
          cd python-service
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
      - name: Test Python service
        run: |
          cd python-service
          pytest --cov=. --cov-report=xml
      
      # Node.js service
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      
      - name: Install Node.js dependencies
        run: |
          cd node-service
          npm ci
      
      - name: Lint Node.js code
        run: |
          cd node-service
          npm run lint
      
      - name: Test Node.js service
        run: |
          cd node-service
          npm test
  
  docker-build:
    name: Build and Scan Docker Images
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      # Python service
      - name: Build Python service image
        uses: docker/build-push-action@v2
        with:
          context: ./python-service
          push: false
          load: true
          tags: python-service:test
          target: development
      
      # Node.js service
      - name: Build Node.js service image
        uses: docker/build-push-action@v2
        with:
          context: ./node-service
          push: false
          load: true
          tags: node-service:test
          target: development
      
      # Nginx service
      - name: Build Nginx image
        uses: docker/build-push-action@v2
        with:
          context: ./nginx
          push: false
          load: true
          tags: nginx-service:test
      
      # Scan images for vulnerabilities
      - name: Run Trivy vulnerability scanner on Python image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'python-service:test'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      
      - name: Run Trivy vulnerability scanner on Node.js image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'node-service:test'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      
      - name: Run Trivy vulnerability scanner on Nginx image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'nginx-service:test'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
  
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: docker-build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Start Docker Compose services
        run: |
          docker-compose up -d
          sleep 30  # Wait for services to fully start
      
      - name: Run integration tests
        run: |
          cd tests
          # Run your integration test script here
          curl -f http://localhost:80/health || exit 1
          curl -f http://localhost:5000/health || exit 1
          curl -f http://localhost:3000/health || exit 1
      
      - name: Stop Docker Compose services
        run: docker-compose down
